# -*- coding: utf-8 -*-
"""
Plot particles at groundlevel
x,y in meters!
"""
import tables
import matplotlib.pyplot as plt
import numpy as np

from pylatex import Document, Section, Subsection, Table, Math, TikZ, Axis, \
    Plot, Figure, Package
from pylatex.utils import italic, escape_latex

# particle selection
R_MAX = 100.
R_MIN = 90.

GIT = 'git e1687f465d '  # git commit (automatiseren!)

FILENAME = 'corsika_834927089_144221120.h5'    # 1e14 p theta = 0
#FILENAME = 'corsika_713335232_854491062.h5'    # 1e14 p theta = 0
CORSIKA_INFO = 'E = 1e14 p theta = 0 degrees'
#FILENAME = 'corsika_77102826_200916071.h5'     # 1e14 p theta = 22.5
#CORSIKA_INFO = 'E = 1e14 p theta = 22.5 degrees'

# recover the seed from filename
SEED = FILENAME.split('.')[0].split('_')[1]+'_'+FILENAME.split('.')[0].split('_')[2]


if __name__=='__main__':
    #
    # Set up LaTeX outputfile
    #
    doc = Document()
    doc.packages.append(Package('geometry', options=['tmargin=1cm',
                                                     'lmargin=3cm']))
    doc.append(r'This file was generated by corsika\_plot\_arrival\_times.py %s' % GIT)

    #
    # Open CORSIKA groundparticle output datafile
    #
    data = tables.open_file(FILENAME, 'r')
    gp = data.root.groundparticles

    #
    # Set up variables

    id = gp.col('particle_id')
    cp_id = ((id==2) | (id==3) | (id==4) | (id==5))   # electron, positron, muon

    t = gp.col('t')
    x = gp.col('x')
    y = gp.col('y')
    r = gp.col('r')
    phi = gp.col('phi')


    #
    # Section: Information about CORSIKA groundparticle datafile
    #
    with doc.create(Section('CORSIKA groundparticle datafile information')):
        doc.append('Datafile: %s \n' % escape_latex(FILENAME))
        doc.append('%s\n' % CORSIKA_INFO)
        doc.append('Number of groundparticles: %d \n' % len(id))

    #
    # Create scatter plot of particles on groundlevel
    #
    ax = plt.subplot(111,polar=True)
    ax.scatter(phi,r)
    ax.set_rmax(3500.0)
    SCATTER_PLOT_FILENAME = 'plots/scatter.png'
    plt.savefig(SCATTER_PLOT_FILENAME, dpi=200)
    plt.show()

    # include in LaTeX
    with doc.create(Figure(position='h!')) as this_plot:
        this_plot.add_image(SCATTER_PLOT_FILENAME, width=r'\textwidth')
        this_plot.add_caption('Scatterplot of groundparticles')

    # In CORSIKA output t = 0 is first interaction (in atmosphere)
    #  Let t = 0 be first groundparticle arrival time
    t_prime = t - min(t) # time from 0

    # Histrograms
    with doc.create(Section('Arrival time histograms')):

        #
        # Plot een serie plot tussen 0.8 en 1.2 * R met daarin de aankomstijdhistogrammen voor cp en gamma's
        #
        Rvalues = [100., 500., 750., 1000., 1500., 2000.]
        for Rstep in Rvalues:

            # set limits
            Rmin = .8 * Rstep
            Rmax = 1.2* Rstep

            # select data
            gamma = t_prime.compress((id==1) & (r > Rmin) & (r < Rmax))
            cp = t_prime.compress(cp_id & (r > Rmin) & (r < Rmax))

            # plot histrogram
            plt.figure()
            plt.hist(cp, bins=50, histtype='step' )
            plt.hist(gamma, bins=50, histtype='step')
            plt.legend(['charged lepton', 'gamma'])
            plt.xlabel('particle arrival time [ns]. First groundparticle t=0')
            plt.ylabel('number of particles')
            plt.title('Histogram '+str(Rmin)+' [m] < R < '+str(Rstep)+' [m]')

            # example: plt_700_834927089_144221120.png
            PLT_FILENAME = 'plt'+'_'+str(int(Rstep))+'_'+SEED+'.png'
            plt.savefig(PLT_FILENAME, dpi=200)
            plt.show()

            # include in LaTeX
            with doc.create(Figure(position='h!')) as this_plot:
                this_plot.add_image(PLT_FILENAME, width=r'\textwidth')
                this_plot.add_caption('Histogram')


            # plot NORMALISED histogram
            plt.figure()
            plt.hist(cp, bins=50, histtype='step', normed=True )
            plt.hist(gamma, bins=50, histtype='step', normed=True )
            plt.xlabel('particle arrival time [ns]. First groundparticle t=0')
            plt.ylabel('count (normalised)')
            plt.legend(['charged lepton', 'gamma'])
            plt.title('Histogram (normalised) '+str(Rmin)+' [m] < R < '+str(Rstep)+' [m]')
            PLT_FILENAME = 'plt'+'_normed_'+str(int(Rstep))+'_'+SEED+'.png'

            plt.savefig(PLT_FILENAME, dpi=200) # example: plt_700_834927089_144221120.png
            plt.show()

            # include in LaTeX
            with doc.create(Figure(position='h!')) as this_plot:
                this_plot.add_image(PLT_FILENAME, width=r'\textwidth')
                this_plot.add_caption('Normalised Histogram')



    data.close()
    doc.generate_pdf()
